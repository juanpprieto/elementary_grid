{"version":3,"sources":["lib/elementary.jsx","lib/utils.tsx","ui/Grid.tsx","ui/Splainer.tsx","ui/Synth.tsx","App.tsx","index.tsx"],"names":["ctx","beatLenFromTempo","tempo","div","beatLen","noteToMidi","n","notes","split","name","octave","indexOf","Number","midiToFrequency","m","Math","pow","range","start","Array","from","keys","map","k","Key","hasHilight","label","note","onToggle","state","step","rest","keyClasses","classnames","keyStyle","className","style","onClick","makeGridNotes","newNotes","length","forEach","key","push","Grid","hilightStep","onToggleNote","onClear","useState","paintMode","setPaintMode","handleMouseUp","useEffect","document","addEventListener","removeEventListener","fieldStyle","cursorStyle","onMouseEnter","handlePaint","onMouseDown","handleMouseDown","Splainer","href","tone","t","gain","el","mul","add","sin","PI","console","log","AudioContext","Synth","scale","sequence","onMetro","tracks","bpm","onTick","isLoaded","setIsLoaded","tick","useRef","metro","interval","sync","metroStep","a","core","initialize","numberOfInputs","numberOfOutputs","outputChannelCount","connect","destination","load","on","e","source","current","doRender","useCallback","resume","seq","i","loop","env","adsr","syn","phasor","trk","out","dly","delay","size","ms2samps","render","useElementary","pentaScale","floor","flat","initTracks","fill","App","setTracks","setMetroStep","keyrange","value","prevTracks","newTracks","ReactDOM","StrictMode","getElementById"],"mappings":"wKAQIA,E,gDCFSC,EAAmB,SAACC,GAA6B,IAAdC,EAAa,uDAAP,GAC9CC,EAAU,GAAKF,EAAQ,IAC7B,OAAmB,EAAVE,EAAeD,EAAO,KAQpBE,EAAa,SAACC,GACzB,IAAIC,EAAQ,CAAC,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KADlC,EAElBD,EAAEE,MAAM,IAFU,mBAElCC,EAFkC,KAE5BC,EAF4B,KAIvC,OAAIH,EAAMI,QAAQF,GAAQ,GAAW,EAE9B,GAAKG,OAAOF,GAAUH,EAAMI,QAAQF,IAGhCI,EAAkB,SAACC,GAC9B,OAAIA,EAAI,EACC,EAEF,IAAMC,KAAKC,IAAI,GAAIF,EAAI,IAAM,KAYzBG,EAAQ,SAACX,GAAD,IAAYY,EAAZ,uDAA4B,EAA5B,mBAChBC,MAAMC,KAAKD,MAAMb,GAAGe,QAAQC,KAAI,SAACC,GAAD,OAAOA,EAAIL,O,+CCtB1CM,EAAM,SAAC,GAQI,IAPfC,EAOc,EAPdA,WACAC,EAMc,EANdA,MACAC,EAKc,EALdA,KACAC,EAIc,EAJdA,SACAC,EAGc,EAHdA,MACAC,EAEc,EAFdA,KACGC,EACW,uEACRC,EAAaC,IAAW,CAC5B,UAAU,EACV,oBAAqBJ,EACrB,sBAAuBJ,IAGnBS,EAAW,CACf,SAAUJ,EACV,SAAUH,GAGZ,OACE,6CACEQ,UAAWH,EACXI,MAAOF,EACPG,QAAS,kBAAMT,EAASD,KACpBI,GAJN,aAME,qBAAKI,UAAU,gBAAf,SAAgCT,QAKhCY,EAAgB,SAAC/B,GACrB,IAAMgC,EAAuB,GAe7B,OAbAtB,EAAMV,EAAMiC,QAAQC,SAAQ,SAACd,GAC3BV,EAAMV,EAAM,GAAGiC,QAAQC,SAAQ,SAACX,GAC9B,IAAMD,EAA8B,IAAtBtB,EAAMoB,GAAMG,GACpBY,EAAG,UAAMf,EAAN,YAAcG,EAAd,YAAsBD,EAAQ,KAAO,OAC9CU,EAASI,KAAK,CACZD,IAAKA,EACLf,KAAMA,EACNG,KAAMA,EACND,MAAOA,EACPH,MAAM,IAAD,OAAMI,EAAN,YAAcH,WAIlBY,GAkFMK,EArEF,SAAC,GAA0D,IAAxDrC,EAAuD,EAAvDA,MAAOsC,EAAgD,EAAhDA,YAAaC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,QAAqB,EACnCC,mBAAoB,QADe,mBAC9DC,EAD8D,KACnDC,EADmD,KAG/DC,EAAgB,kBAAMD,EAAa,SAqBzCE,qBAAU,WAGR,OAFAC,SAASC,iBAAiB,UAAWH,GAE9B,WACLE,SAASE,oBAAoB,UAAWJ,OAI5C,IAAMK,EAAa,CACjB,YAAajD,EAAM,GAAGiC,OACtB,SAAUjC,EAAMiC,QAGZiB,EAAc,CAClB,WAAYZ,GAGd,OACE,sBAAKV,UAAU,UAAf,UACE,sBAAKA,UAAU,iBAAiBC,MAAOoB,EAAvC,UACGlB,EAAc/B,GAAOe,KACpB,gBAAGoB,EAAH,EAAGA,IAAKf,EAAR,EAAQA,KAAMG,EAAd,EAAcA,KAAMD,EAApB,EAAoBA,MAAOH,EAA3B,EAA2BA,MAA3B,OACE,cAAC,EAAD,CAEEC,KAAMA,EACNG,KAAMA,EACND,MAAOA,EACPH,MAAOA,EACPE,SAAU,kBAAMkB,EAAanB,EAAMG,EAAMD,EAAQ,EAAI,IACrD6B,aAAc,iBACE,SAAdT,GAvCM,SAACtB,EAAcG,GACf,SAAdmB,GAA8C,IAAtB1C,EAAMoB,GAAMG,IACtCgB,EAAanB,EAAMG,EAAM,GAGT,UAAdmB,GAA+C,IAAtB1C,EAAMoB,GAAMG,IACvCgB,EAAanB,EAAMG,EAAM,GAiCS6B,CAAYhC,EAAMG,IAE5C8B,YAAa,kBAnDD,SAACjC,EAAcG,GACX,IAAtBvB,EAAMoB,GAAMG,IACdgB,EAAanB,EAAMG,EAAM,GACzBoB,EAAa,UAEbJ,EAAanB,EAAMG,EAAM,GACzBoB,EAAa,UA6CcW,CAAgBlC,EAAMG,KATpCY,MAaX,qBAAKP,UAAU,kBAAkBC,MAAOqB,OAE1C,qBAAKtB,UAAU,mBAAf,SACE,wBAAQE,QAASU,EAAjB,yBCtIOe,EAVE,WACf,OACE,mCACE,2CACY,mBAAGC,KAAK,gCAAR,oC,+BHalB,SAASC,EAAKC,GAAgB,IAAbC,EAAY,uDAAL,EACtB,OAAOC,IAAGC,IACRF,EACAC,IAAGE,IAAIF,IAAGG,IAAIH,IAAGC,IAAI,EAAIrD,KAAKwD,GAAIN,IAAKE,IAAGG,IAAIH,IAAGC,IAAI,EAAIrD,KAAKwD,GAAIN,EAAG,QATnEjE,IACJwE,QAAQC,IAAI,+BACJzE,EAAM,IAAI0E,cICLC,MALf,YAAqD,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,QAEhC,OJyB2B,SAACC,EAAQH,GAA8B,IAAvBI,EAAsB,uDAAhB,IAAKC,EAAW,yCACjCjC,oBAAS,GADwB,mBAC1DkC,EAD0D,KAChDC,EADgD,KAG3DC,EAAOC,iBACXlB,IAAGmB,MAAM,CAAE7E,KAAM,OAAQ8E,SAAUtF,EAAiB+E,EAAK,OAErDQ,EAAOH,iBACXlB,IAAGmB,MAAM,CAAE7E,KAAM,OAAQ8E,SAAUtF,EAAiB+E,EAAK,MAGrDS,EAAYJ,iBAAO,GAEzBjC,qBAAU,YAEE,uCAAG,sBAAAsC,EAAA,sEACEC,IAAKC,WAAW5F,EAAK,CAChC6F,eAAgB,EAChBC,gBAAiB,EACjBC,mBAAoB,CAAC,KAJZ,cAMNC,QAAQhG,EAAIiG,aACjBd,GAAY,GAPD,2CAAH,oDASVe,KACC,IAEH9C,qBAAU,WACRuC,IAAKQ,GAAG,SAAS,SAACC,GACC,SAAbA,EAAEC,SACJZ,EAAUa,SAAW,GAGN,SAAbF,EAAEC,SACJZ,EAAUa,QAAUb,EAAUa,QAAU,EACxCrB,EAAOQ,EAAUa,eAGpB,IAEH,IAAMC,EAAWC,sBAAW,sBAAC,sCAAAd,EAAA,yDACT,cAAd1F,EAAI6B,MADmB,gCAEnB7B,EAAIyG,SAFe,OAK3B,GAAIvB,GAA0B,YAAdlF,EAAI6B,MAClB,IAGQ6E,EAAM,SAACC,GAAD,OACVxC,IAAGuC,IAAI,CAAEA,IAAK3B,EAAO4B,GAAIC,MAAM,GAASxB,EAAKkB,QAASd,EAAKc,UACvDO,EAAM,SAACF,GAAD,OAAOxC,IAAG2C,KAAK,IAAM,GAAK,GAAK,EAAKJ,EAAIC,KAC9CI,EAAM,SAACJ,GAAD,OACVxC,IAAGE,IACDF,IAAGC,IAAIJ,EAAKG,IAAG6C,OAAO,MAAApC,EAAM+B,IAAoB,KAChDxC,IAAGC,IAAIJ,EAAKG,IAAG6C,OAAO,KAAApC,EAAM+B,IAAoB,OAE9CM,EAAM,SAACN,GAAD,OAAOxC,IAAGC,IAAIyC,EAAIF,GAAII,EAAIJ,KAElCO,EAAM/C,IAAGE,IACXF,IAAGE,IAAIpD,EAAM,EAAG,GAAGK,IAAI2F,IACvB9C,IAAGE,IAAIpD,EAAM,EAAG,GAAGK,IAAI2F,IACvB9C,IAAGE,IAAIpD,EAAM,EAAG,GAAGK,IAAI2F,IACvB9C,IAAGE,IAAIpD,EAAM,EAAG,IAAIK,IAAI2F,KAGtBE,EAAMhD,IAAGiD,MACX,CAAEC,KAAM,OACRlD,IAAGmD,SAAS,EAAIrH,EAAiB+E,EAAK,MACrC,GACDkC,GAEFA,EAAM/C,IAAGE,IAAIF,IAAGC,IAAI,GAAK8C,GAAM/C,IAAGC,IAAI,IAAM+C,IAE5CxB,IAAK4B,OAAOL,EAAKA,EAAK/C,IAAGC,IAAI,EAAGgB,EAAKkB,SAAUnC,IAAGC,IAAI,EAAGoB,EAAKc,UAC9D,MAAOF,GACP5B,QAAQC,IAAI2B,GApCW,2CAuC1B,CAACpB,EAAKE,EAAUH,EAAQH,IAE3BxB,qBAAU,WACRmD,MACC,CAACA,EAAUxB,II5GdyC,CAAc3C,EAAUD,EAAMtD,IAAIT,GAAkB,IAAKiE,GAClD,8BCDH2C,G,MAAa,CAAC,IAAK,IAAK,IAAK,IAAK,MAKlC7C,EAAQ3D,EAHI,IAIfK,KACC,SAACqF,GAAD,gBACKc,EAAWd,EAAIc,EAAWjF,SAD/B,OAEIzB,KAAK2G,MAAMf,EAAIc,EAAWjF,QAAU,MAGzCmF,OAEGC,EAAa,kBACjBzG,MAAMC,KAAKD,MAbK,KAaa,kBAAM,IAAIA,MAZxB,IAYwC0G,KAAK,OAsC/CC,MApCf,WAAgB,IAAD,EACe9E,mBAAqB4E,KADpC,mBACN7C,EADM,KACEgD,EADF,OAEqB/E,mBAAiB,GAFtC,mBAENyC,EAFM,KAEKuC,EAFL,KAiBb,OACE,qCACE,cAAC,EAAD,CACEpD,MAAOA,EAAMtD,IAAIjB,GACjBwE,SAAUE,EACVD,QATU,SAAChD,GACfkG,EAAalG,MAUX,cAAC,EAAD,CACEmG,SAAU,GACV1H,MAAOwE,EACPjC,aAvBa,SAACnB,EAAcG,EAAcoG,GAC9CH,GAAU,SAACI,GACT,IAAMC,EAAS,YAAOD,GAGtB,OAFAC,EAAUzG,GAAMG,GAAQoG,EAEjBE,MAmBLvF,YAAa4C,EACb1C,QAAS,kBAAMgF,EAAUH,QAE3B,cAAC,EAAD,QCtDNS,IAASd,OACP,cAAC,IAAMe,WAAP,UACE,cAAC,EAAD,MAEFjF,SAASkF,eAAe,W","file":"static/js/main.f3c0ef5a.chunk.js","sourcesContent":["import {\r\n  el,\r\n  ElementaryWebAudioRenderer as core,\r\n} from \"@nick-thompson/elementary\";\r\nimport { useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\nimport { beatLenFromTempo, range } from \"./utils\";\r\n\r\nlet ctx;\r\n\r\nfunction getAudioCtx() {\r\n  if (ctx) return ctx;\r\n  console.log(\"creating a new AudioContext\");\r\n  return (ctx = new AudioContext());\r\n}\r\ngetAudioCtx();\r\n\r\nfunction tone(t, gain = 1.0) {\r\n  return el.mul(\r\n    gain,\r\n    el.add(el.sin(el.mul(2 * Math.PI, t)), el.sin(el.mul(3 * Math.PI, t, 0.05)))\r\n  );\r\n}\r\n\r\n/**\r\n * @typedef {number[]} Track\r\n */\r\n\r\n/**\r\n *\r\n * @param {number[][]} tracks\r\n * @param {number[]} scale\r\n * @param {number} bpm\r\n * @param {function} onTick\r\n */\r\n\r\nexport const useElementary = (tracks, scale, bpm = 120, onTick) => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  const tick = useRef(\r\n    el.metro({ name: \"tick\", interval: beatLenFromTempo(bpm, 16) })\r\n  );\r\n  const sync = useRef(\r\n    el.metro({ name: \"sync\", interval: beatLenFromTempo(bpm, 1) })\r\n  );\r\n\r\n  const metroStep = useRef(0);\r\n\r\n  useEffect(() => {\r\n    let node;\r\n    const load = async () => {\r\n      node = await core.initialize(ctx, {\r\n        numberOfInputs: 0,\r\n        numberOfOutputs: 1,\r\n        outputChannelCount: [4],\r\n      });\r\n      node.connect(ctx.destination);\r\n      setIsLoaded(true);\r\n    };\r\n    load();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    core.on(\"metro\", (e) => {\r\n      if (e.source === \"sync\") {\r\n        metroStep.current = -1;\r\n      }\r\n\r\n      if (e.source === \"tick\") {\r\n        metroStep.current = metroStep.current + 1;\r\n        onTick(metroStep.current);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const doRender = useCallback(async () => {\r\n    if (ctx.state === \"suspended\") {\r\n      await ctx.resume();\r\n    }\r\n\r\n    if (isLoaded && ctx.state === \"running\") {\r\n      try {\r\n        const detune = 0.005;\r\n\r\n        const seq = (i) =>\r\n          el.seq({ seq: tracks[i], loop: false }, tick.current, sync.current);\r\n        const env = (i) => el.adsr(0.01, 0.3, 0.1, 1.0, seq(i));\r\n        const syn = (i) =>\r\n          el.add(\r\n            el.mul(tone(el.phasor(scale[i] * (1 + detune)), 0.5)),\r\n            el.mul(tone(el.phasor(scale[i] * (1 - detune)), 0.5))\r\n          );\r\n        const trk = (i) => el.mul(env(i), syn(i));\r\n\r\n        let out = el.add(\r\n          el.add(range(4, 0).map(trk)),\r\n          el.add(range(4, 4).map(trk)),\r\n          el.add(range(4, 8).map(trk)),\r\n          el.add(range(4, 12).map(trk))\r\n        );\r\n\r\n        let dly = el.delay(\r\n          { size: 44100 },\r\n          el.ms2samps(3 * beatLenFromTempo(bpm, 16)),\r\n          -0.3,\r\n          out\r\n        );\r\n        out = el.add(el.mul(0.5, out), el.mul(0.15, dly));\r\n\r\n        core.render(out, out, el.mul(0, tick.current), el.mul(0, sync.current));\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }, [bpm, isLoaded, tracks, scale]);\r\n\r\n  useEffect(() => {\r\n    doRender();\r\n  }, [doRender, tracks]);\r\n};\r\n","/**\r\n * Calculate the length, in ms, of one given subdivision at the specificed BPM\r\n * @param {*} tempo tempo in Beats Per Minute\r\n * @param {*} div subdivision for which the length is sought, defaults to 16:th note\r\n * @returns the length of one subdivision in ms\r\n */\r\nexport const beatLenFromTempo = (tempo: number, div = 16) => {\r\n  const beatLen = 1 / (tempo / 60);\r\n  return ((beatLen * 4) / div) * 1000;\r\n};\r\n\r\nexport const freqFromTempo = (tempo: number, div = 16) => {\r\n  const beatsPerSec = tempo / 60;\r\n  return (beatsPerSec / 4) * div;\r\n};\r\n\r\nexport const noteToMidi = (n: string) => {\r\n  let notes = [\"c\", \"c#\", \"d\", \"d#\", \"e\", \"f\", \"f#\", \"g\", \"g#\", \"a\", \"a#\", \"b\"];\r\n  let [name, octave] = n.split(\"\");\r\n\r\n  if (notes.indexOf(name) < 0) return -1;\r\n\r\n  return 12 * Number(octave) + notes.indexOf(name);\r\n};\r\n\r\nexport const midiToFrequency = (m: number) => {\r\n  if (m < 0) {\r\n    return 0;\r\n  }\r\n  return 440 * Math.pow(2, (m - 69) / 12);\r\n};\r\n\r\nexport const highestNote = (n: number) => {\r\n  let c = 0;\r\n  while (n > 0) {\r\n    n = n >> 1;\r\n    c += 1;\r\n  }\r\n  return c;\r\n};\r\n\r\nexport const range = (n: number, start: number = 0) => [\r\n  ...Array.from(Array(n).keys()).map((k) => k + start),\r\n];\r\n","import classnames from \"classnames\";\r\nimport { CSSProperties, HTMLAttributes, useEffect, useState } from \"react\";\r\nimport { range } from \"../lib/utils\";\r\n\r\nimport \"./Grid.scss\";\r\n\r\ntype StepNote = {\r\n  hasHilight?: boolean;\r\n  key?: string;\r\n  label?: string;\r\n  note: number;\r\n  state: boolean;\r\n  step: number;\r\n};\r\n\r\ntype KeyProps = StepNote &\r\n  HTMLAttributes<HTMLDivElement> & {\r\n    onToggle: (note: number) => void;\r\n  };\r\n\r\nconst Key = ({\r\n  hasHilight,\r\n  label,\r\n  note,\r\n  onToggle,\r\n  state,\r\n  step,\r\n  ...rest\r\n}: KeyProps) => {\r\n  const keyClasses = classnames({\r\n    \"gs-key\": true,\r\n    \"gs-key--is-active\": state,\r\n    \"gs-key--has-hilight\": hasHilight,\r\n  });\r\n\r\n  const keyStyle = {\r\n    \"--step\": step,\r\n    \"--note\": note,\r\n  } as CSSProperties;\r\n\r\n  return (\r\n    <div\r\n      className={keyClasses}\r\n      style={keyStyle}\r\n      onClick={() => onToggle(note)}\r\n      {...rest}\r\n    >\r\n      <div className=\"gs-key__label\">{label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst makeGridNotes = (notes: number[][]) => {\r\n  const newNotes: StepNote[] = [];\r\n\r\n  range(notes.length).forEach((note) => {\r\n    range(notes[0].length).forEach((step) => {\r\n      const state = notes[note][step] === 1;\r\n      const key = `${note}_${step}_${state ? \"on\" : \"off\"}`;\r\n      newNotes.push({\r\n        key: key,\r\n        note: note,\r\n        step: step,\r\n        state: state,\r\n        label: `s${step}n${note}`,\r\n      });\r\n    });\r\n  });\r\n  return newNotes;\r\n};\r\n\r\ntype PaintMode = \"none\" | \"fill\" | \"clear\";\r\n\r\ntype Props = {\r\n  notes: number[][];\r\n  keyrange?: number;\r\n  hilightStep?: number;\r\n  onToggleNote: (note: number, step: number, mode: number) => void;\r\n  onClear: () => void;\r\n};\r\n\r\nconst Grid = ({ notes, hilightStep, onToggleNote, onClear }: Props) => {\r\n  const [paintMode, setPaintMode] = useState<PaintMode>(\"none\");\r\n\r\n  const handleMouseUp = () => setPaintMode(\"none\");\r\n\r\n  const handleMouseDown = (note: number, step: number) => {\r\n    if (notes[note][step] === 0) {\r\n      onToggleNote(note, step, 1);\r\n      setPaintMode(\"fill\");\r\n    } else {\r\n      onToggleNote(note, step, 0);\r\n      setPaintMode(\"clear\");\r\n    }\r\n  };\r\n\r\n  const handlePaint = (note: number, step: number) => {\r\n    if (paintMode === \"fill\" && notes[note][step] === 0) {\r\n      onToggleNote(note, step, 1);\r\n    }\r\n\r\n    if (paintMode === \"clear\" && notes[note][step] === 1)\r\n      onToggleNote(note, step, 0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mouseup\", handleMouseUp);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mouseup\", handleMouseUp);\r\n    };\r\n  });\r\n\r\n  const fieldStyle = {\r\n    \"--columns\": notes[0].length,\r\n    \"--rows\": notes.length,\r\n  } as CSSProperties;\r\n\r\n  const cursorStyle = {\r\n    \"--cursor\": hilightStep,\r\n  } as CSSProperties;\r\n\r\n  return (\r\n    <div className=\"gs-grid\">\r\n      <div className=\"gs-grid__field\" style={fieldStyle}>\r\n        {makeGridNotes(notes).map(\r\n          ({ key, note, step, state, label }: StepNote) => (\r\n            <Key\r\n              key={key}\r\n              note={note}\r\n              step={step}\r\n              state={state}\r\n              label={label}\r\n              onToggle={() => onToggleNote(note, step, state ? 0 : 1)}\r\n              onMouseEnter={() =>\r\n                paintMode !== \"none\" && handlePaint(note, step)\r\n              }\r\n              onMouseDown={() => handleMouseDown(note, step)}\r\n            />\r\n          )\r\n        )}\r\n        <div className=\"gs-grid__cursor\" style={cursorStyle} />\r\n      </div>\r\n      <div className=\"gs-grid__toolbar\">\r\n        <button onClick={onClear}>Clear</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","const Splainer = () => {\n  return (\n    <>\n      <p>\n        Made with <a href=\"https://www.elementary.audio/\">Elementary Audio</a>\n      </p>\n    </>\n  );\n};\n\nexport default Splainer;\n","import { useElementary } from \"../lib/elementary\";\nimport { midiToFrequency } from \"../lib/utils\";\n\ntype Props = {\n  scale: number[];\n  sequence: number[][];\n  onMetro: (step: number) => void;\n};\n\nfunction Synth({ scale, sequence, onMetro }: Props) {\n  useElementary(sequence, scale.map(midiToFrequency), 120, onMetro);\n  return <></>;\n}\n\nexport default Synth;\n","import { useState } from \"react\";\n\nimport { noteToMidi, range } from \"./lib/utils\";\n\nimport Grid from \"./ui/Grid\";\nimport Splainer from \"./ui/Splainer\";\nimport Synth from \"./ui/Synth\";\n\nimport \"./App.scss\";\n\nconst pentaScale = [\"c\", \"d\", \"f\", \"g\", \"a\"];\n\nconst numTracks = 16;\nconst numSteps = 16;\n\nconst scale = range(numTracks)\n  .map(\n    (i) =>\n      `${pentaScale[i % pentaScale.length]}${\n        Math.floor(i / pentaScale.length) + 4\n      }`\n  )\n  .flat();\n\nconst initTracks = () =>\n  Array.from(Array(numTracks), () => new Array(numSteps).fill(0));\n\nfunction App() {\n  const [tracks, setTracks] = useState<number[][]>(initTracks());\n  const [metroStep, setMetroStep] = useState<number>(0);\n\n  const toggleNote = (note: number, step: number, value: number) => {\n    setTracks((prevTracks) => {\n      const newTracks = [...prevTracks];\n      newTracks[note][step] = value;\n\n      return newTracks;\n    });\n  };\n\n  const onMetro = (step: number) => {\n    setMetroStep(step);\n  };\n\n  return (\n    <>\n      <Synth\n        scale={scale.map(noteToMidi)}\n        sequence={tracks}\n        onMetro={onMetro}\n      />\n      <Grid\n        keyrange={16}\n        notes={tracks}\n        onToggleNote={toggleNote}\n        hilightStep={metroStep}\n        onClear={() => setTracks(initTracks())}\n      />\n      <Splainer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}