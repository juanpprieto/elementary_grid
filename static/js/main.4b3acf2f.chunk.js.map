{"version":3,"sources":["lib/elementary.jsx","lib/utils.tsx","ui/Grid.tsx","ui/Splainer.tsx","ui/Synth.tsx","App.tsx","index.tsx"],"names":["ctx","tempoToMs","tempo","subDiv","beatLen","noteToMidi","n","notes","split","name","octave","indexOf","Number","midiToFrequency","m","Math","pow","range","start","Array","from","keys","map","k","Key","hasHilight","note","onToggle","state","step","rest","keyClasses","classnames","keyStyle","className","style","onClick","makeGridNotes","newNotes","length","forEach","push","key","Grid","hilightStep","onToggleNote","onClear","useState","paintMode","setPaintMode","handleMouseUp","useEffect","document","addEventListener","removeEventListener","fieldStyle","cursorStyle","onMouseEnter","handlePaint","onMouseDown","handleMouseDown","Splainer","href","tone","t","gain","el","mul","add","sin","PI","console","log","AudioContext","Synth","scale","sequence","onMetro","tracks","bpm","onTick","isLoaded","setIsLoaded","tick","useRef","metro","interval","sync","metroStep","a","core","initialize","numberOfInputs","numberOfOutputs","outputChannelCount","connect","destination","load","on","e","source","current","doRender","useCallback","resume","seq","i","loop","env","adsr","syn","phasor","trk","out","dly","delay","size","ms2samps","render","useElementary","pentaScale","floor","flat","initTracks","fill","App","setTracks","setMetroStep","keyrange","value","prevTracks","newTracks","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4b3acf2f.chunk.js","sourcesContent":["import {\n  el,\n  ElementaryWebAudioRenderer as core,\n} from \"@nick-thompson/elementary\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\n\nimport { tempoToMs, range } from \"./utils\";\n\nlet ctx;\n\nfunction getAudioCtx() {\n  if (ctx) return ctx;\n  console.log(\"creating a new AudioContext\");\n  return (ctx = new AudioContext());\n}\ngetAudioCtx();\n\nfunction tone(t, gain = 1.0) {\n  return el.mul(\n    gain,\n    el.add(el.sin(el.mul(2 * Math.PI, t)), el.sin(el.mul(3 * Math.PI, t, 0.05)))\n  );\n}\n\n/**\n *\n * @param {number[][]} tracks\n * @param {number[]} scale\n * @param {number} bpm\n * @param {function} onTick\n */\n\nexport const useElementary = (tracks, scale, bpm = 120, onTick) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const tick = useRef(el.metro({ name: \"tick\", interval: tempoToMs(bpm, 16) }));\n  const sync = useRef(el.metro({ name: \"sync\", interval: tempoToMs(bpm, 1) }));\n\n  const metroStep = useRef(0);\n\n  useEffect(() => {\n    let node;\n    const load = async () => {\n      node = await core.initialize(ctx, {\n        numberOfInputs: 0,\n        numberOfOutputs: 1,\n        outputChannelCount: [4],\n      });\n      node.connect(ctx.destination);\n      setIsLoaded(true);\n    };\n    load();\n  }, []);\n\n  useEffect(() => {\n    core.on(\"metro\", (e) => {\n      if (e.source === \"sync\") {\n        metroStep.current = -1;\n      }\n\n      if (e.source === \"tick\") {\n        metroStep.current = metroStep.current + 1;\n        onTick(metroStep.current);\n      }\n    });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const doRender = useCallback(async () => {\n    if (ctx.state === \"suspended\") {\n      await ctx.resume();\n    }\n\n    if (isLoaded && ctx.state === \"running\") {\n      try {\n        const detune = 0.005;\n\n        const seq = (i) =>\n          el.seq({ seq: tracks[i], loop: false }, tick.current, sync.current);\n        const env = (i) => el.adsr(0.01, 0.3, 0.1, 1.0, seq(i));\n        const syn = (i) =>\n          el.add(\n            el.mul(tone(el.phasor(scale[i] * (1 + detune)), 0.5)),\n            el.mul(tone(el.phasor(scale[i] * (1 - detune)), 0.5))\n          );\n        const trk = (i) => el.mul(env(i), syn(i));\n\n        let out = el.add(\n          el.add(range(4, 0).map(trk)),\n          el.add(range(4, 4).map(trk)),\n          el.add(range(4, 8).map(trk)),\n          el.add(range(4, 12).map(trk))\n        );\n\n        let dly = el.delay(\n          { size: 44100 },\n          el.ms2samps(3 * tempoToMs(bpm, 16)),\n          -0.3,\n          out\n        );\n        out = el.add(el.mul(0.5, out), el.mul(0.15, dly));\n\n        core.render(out, out, el.mul(0, tick.current), el.mul(0, sync.current));\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }, [bpm, isLoaded, tracks, scale]);\n\n  useEffect(() => {\n    doRender();\n  }, [doRender, tracks]);\n};\n","/**\n * Calculate the length, in ms, of one given subdivision at the specificed BPM\n * @param {*} tempo tempo in Beats Per Minute\n * @param {*} subDiv subdivision for which the length is sought, defaults to 16:th note\n * @returns the length of one subdivision in ms\n */\nexport const tempoToMs = (tempo: number, subDiv = 16) => {\n  const beatLen = 1 / (tempo / 60);\n  return ((beatLen * 4) / subDiv) * 1000;\n};\n\nexport const noteToMidi = (n: string) => {\n  let notes = [\"c\", \"c#\", \"d\", \"d#\", \"e\", \"f\", \"f#\", \"g\", \"g#\", \"a\", \"a#\", \"b\"];\n  let [name, octave] = n.split(\"\");\n\n  if (notes.indexOf(name) < 0) return -1;\n\n  return 12 * Number(octave) + notes.indexOf(name);\n};\n\nexport const midiToFrequency = (m: number) => {\n  if (m < 0) {\n    return 0;\n  }\n  return 440 * Math.pow(2, (m - 69) / 12);\n};\n\nexport const range = (n: number, start: number = 0) => [\n  ...Array.from(Array(n).keys()).map((k) => k + start),\n];\n","import classnames from \"classnames\";\nimport { CSSProperties, HTMLAttributes, useEffect, useState } from \"react\";\nimport { range } from \"../lib/utils\";\n\nimport \"./Grid.scss\";\n\ntype StepNote = {\n  hasHilight?: boolean;\n  key?: string;\n  note: number;\n  state: boolean;\n  step: number;\n};\n\ntype KeyProps = StepNote &\n  HTMLAttributes<HTMLDivElement> & {\n    onToggle: (note: number) => void;\n  };\n\nconst Key = ({\n  hasHilight,\n  note,\n  onToggle,\n  state,\n  step,\n  ...rest\n}: KeyProps) => {\n  const keyClasses = classnames({\n    \"gs-key\": true,\n    \"gs-key--is-active\": state,\n    \"gs-key--has-hilight\": hasHilight,\n  });\n\n  const keyStyle = {\n    \"--step\": step,\n    \"--note\": note,\n  } as CSSProperties;\n\n  return (\n    <div\n      className={keyClasses}\n      style={keyStyle}\n      onClick={() => onToggle(note)}\n      {...rest}\n    />\n  );\n};\n\nconst makeGridNotes = (notes: number[][]) => {\n  const newNotes: StepNote[] = [];\n\n  range(notes.length).forEach((note) => {\n    range(notes[0].length).forEach((step) => {\n      const state = notes[note][step] === 1;\n      newNotes.push({\n        key: `${note}_${step}_${state ? \"on\" : \"off\"}`,\n        note: note,\n        step: step,\n        state: state,\n      });\n    });\n  });\n  return newNotes;\n};\n\ntype PaintMode = \"none\" | \"fill\" | \"clear\";\n\ntype Props = {\n  notes: number[][];\n  keyrange?: number;\n  hilightStep?: number;\n  onToggleNote: (note: number, step: number, mode: number) => void;\n  onClear: () => void;\n};\n\nconst Grid = ({ notes, hilightStep, onToggleNote, onClear }: Props) => {\n  const [paintMode, setPaintMode] = useState<PaintMode>(\"none\");\n\n  const handleMouseUp = () => setPaintMode(\"none\");\n\n  const handleMouseDown = (note: number, step: number) => {\n    if (notes[note][step] === 0) {\n      onToggleNote(note, step, 1);\n      setPaintMode(\"fill\");\n    } else {\n      onToggleNote(note, step, 0);\n      setPaintMode(\"clear\");\n    }\n  };\n\n  const handlePaint = (note: number, step: number) => {\n    if (paintMode === \"fill\" && notes[note][step] === 0) {\n      onToggleNote(note, step, 1);\n    }\n\n    if (paintMode === \"clear\" && notes[note][step] === 1)\n      onToggleNote(note, step, 0);\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mouseup\", handleMouseUp);\n\n    return () => {\n      document.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  });\n\n  const fieldStyle = {\n    \"--columns\": notes[0].length,\n    \"--rows\": notes.length,\n  } as CSSProperties;\n\n  const cursorStyle = {\n    \"--cursor\": hilightStep,\n  } as CSSProperties;\n\n  return (\n    <div className=\"gs-grid\">\n      <div className=\"gs-grid__field\" style={fieldStyle}>\n        {makeGridNotes(notes).map(({ key, note, step, state }: StepNote) => (\n          <Key\n            key={key}\n            note={note}\n            step={step}\n            state={state}\n            onToggle={() => onToggleNote(note, step, state ? 0 : 1)}\n            onMouseEnter={() => paintMode !== \"none\" && handlePaint(note, step)}\n            onMouseDown={() => handleMouseDown(note, step)}\n          />\n        ))}\n        <div className=\"gs-grid__cursor\" style={cursorStyle} />\n      </div>\n      <div className=\"gs-grid__toolbar\">\n        <button onClick={onClear}>Clear</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Grid;\n","import \"./Splainer.scss\";\n\nconst Splainer = () => {\n  return (\n    <div className=\"splainer\">\n      <span>\n        Made with <a href=\"https://www.elementary.audio/\">Elementary Audio</a>\n      </span>\n      <span>\n        Source on <a href=\"https://github.com/teetow/elementary_grid\">GitHub</a>\n      </span>\n      <span>\n        Check out my <a href=\"https://soundcloud.com/teetow\">SoundCloud</a>\n        {\" =)\"}\n      </span>\n    </div>\n  );\n};\n\nexport default Splainer;\n","import { useElementary } from \"../lib/elementary\";\nimport { midiToFrequency } from \"../lib/utils\";\n\ntype Props = {\n  scale: number[];\n  sequence: number[][];\n  onMetro: (step: number) => void;\n};\n\nfunction Synth({ scale, sequence, onMetro }: Props) {\n  useElementary(sequence, scale.map(midiToFrequency), 120, onMetro);\n  return <></>;\n}\n\nexport default Synth;\n","import { useState } from \"react\";\n\nimport { noteToMidi, range } from \"./lib/utils\";\n\nimport Grid from \"./ui/Grid\";\nimport Splainer from \"./ui/Splainer\";\nimport Synth from \"./ui/Synth\";\n\nimport \"./App.scss\";\n\nconst pentaScale = [\"c\", \"d\", \"f\", \"g\", \"a\"];\n\nconst numTracks = 16;\nconst numSteps = 16;\n\nconst scale = range(numTracks)\n  .map(\n    (i) =>\n      `${pentaScale[i % pentaScale.length]}${\n        Math.floor(i / pentaScale.length) + 4\n      }`\n  )\n  .flat();\n\nconst initTracks = () =>\n  Array.from(Array(numTracks), () => new Array(numSteps).fill(0));\n\nfunction App() {\n  const [tracks, setTracks] = useState<number[][]>(initTracks());\n  const [metroStep, setMetroStep] = useState<number>(0);\n\n  const toggleNote = (note: number, step: number, value: number) => {\n    setTracks((prevTracks) => {\n      const newTracks = [...prevTracks];\n      newTracks[note][step] = value;\n\n      return newTracks;\n    });\n  };\n\n  const onMetro = (step: number) => {\n    setMetroStep(step);\n  };\n\n  return (\n    <div className=\"eg-app\">\n      <Synth\n        scale={scale.map(noteToMidi)}\n        sequence={tracks}\n        onMetro={onMetro}\n      />\n      <Grid\n        keyrange={16}\n        notes={tracks}\n        onToggleNote={toggleNote}\n        hilightStep={metroStep}\n        onClear={() => setTracks(initTracks())}\n      />\n      <Splainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}