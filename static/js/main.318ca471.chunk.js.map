{"version":3,"sources":["lib/utils.tsx","ui/Grid.tsx","ui/Splainer.tsx","lib/tones.js","lib/elementary.jsx","ui/Synth.tsx","App.tsx","index.tsx"],"names":["tempoToMs","tempo","subDiv","beatLen","noteToMidi","n","notes","split","name","octave","indexOf","Number","midiToFrequency","m","Math","pow","range","start","Array","from","keys","map","k","Key","hasHilight","note","onToggle","state","step","rest","keyClasses","classnames","keyStyle","className","style","onClick","makeGridNotes","newNotes","length","forEach","push","key","Grid","hilightStep","onToggleNote","onClear","useState","paintMode","setPaintMode","handleMouseUp","useEffect","document","addEventListener","removeEventListener","fieldStyle","cursorStyle","onMouseEnter","handlePaint","onMouseDown","handleMouseDown","Splainer","href","stab","freq","gain","detune","sharpness","tone","t","toneGain","el","mul","add","sin","PI","out","phasor","highpass","desc","ding","richness","tanh","cycle","ctx","kick","gate","speed","pop","ampEnv","adsr","fastEnv","slowEnv","pitch","osc","console","log","AudioContext","tones","KickSwitch","active","setActive","type","id","checked","onChange","htmlFor","label","TonePicker","currentTone","onSetTone","value","Synth","scale","sequence","onTick","setCurrentTone","withKick","setWithKick","tracks","bpm","isLoaded","setIsLoaded","tick","useRef","metro","interval","current","beat","sync","metroStep","a","core","initialize","numberOfInputs","numberOfOutputs","outputChannelCount","connect","destination","load","on","e","source","doRender","useCallback","resume","seq","i","loop","env","voice","patch","dly","delay","size","ms2samps","kicktrack","render","useElementary","pentaScale","floor","flat","initTracks","fill","App","setTracks","setTick","keyrange","prevTracks","newTracks","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.318ca471.chunk.js","sourcesContent":["/**\n * Calculate the length, in ms, of one given subdivision at the specificed BPM\n * @param {*} tempo tempo in Beats Per Minute\n * @param {*} subDiv subdivision for which the length is sought, defaults to 16:th note\n * @returns the length of one subdivision in ms\n */\nexport const tempoToMs = (tempo: number, subDiv = 16) => {\n  const beatLen = 1 / (tempo / 60);\n  return ((beatLen * 4) / subDiv) * 1000;\n};\n\nexport const noteToMidi = (n: string) => {\n  let notes = [\"c\", \"c#\", \"d\", \"d#\", \"e\", \"f\", \"f#\", \"g\", \"g#\", \"a\", \"a#\", \"b\"];\n  let [name, octave] = n.split(\"\");\n\n  if (notes.indexOf(name) < 0) return -1;\n\n  return 12 * Number(octave) + notes.indexOf(name);\n};\n\nexport const midiToFrequency = (m: number) => {\n  if (m < 0) {\n    return 0;\n  }\n  return 440 * Math.pow(2, (m - 69) / 12);\n};\n\nexport const range = (n: number, start: number = 0) => [\n  ...Array.from(Array(n).keys()).map((k) => k + start),\n];\n","import classnames from \"classnames\";\nimport { CSSProperties, HTMLAttributes, useEffect, useState } from \"react\";\nimport { range } from \"../lib/utils\";\n\nimport \"./Grid.scss\";\n\ntype StepNote = {\n  hasHilight?: boolean;\n  key?: string;\n  note: number;\n  state: boolean;\n  step: number;\n};\n\ntype KeyProps = StepNote &\n  HTMLAttributes<HTMLDivElement> & {\n    onToggle: (note: number) => void;\n  };\n\nconst Key = ({\n  hasHilight,\n  note,\n  onToggle,\n  state,\n  step,\n  ...rest\n}: KeyProps) => {\n  const keyClasses = classnames({\n    \"gs-key\": true,\n    \"gs-key--is-active\": state,\n    \"gs-key--has-hilight\": hasHilight,\n  });\n\n  const keyStyle = {\n    \"--step\": step,\n    \"--note\": note,\n  } as CSSProperties;\n\n  return (\n    <div\n      className={keyClasses}\n      style={keyStyle}\n      onClick={() => onToggle(note)}\n      {...rest}\n    />\n  );\n};\n\nconst makeGridNotes = (notes: number[][]) => {\n  const newNotes: StepNote[] = [];\n\n  range(notes.length).forEach((note) => {\n    range(notes[0].length).forEach((step) => {\n      const state = notes[note][step] === 1;\n      newNotes.push({\n        key: `${note}_${step}_${state ? \"on\" : \"off\"}`,\n        note: note,\n        step: step,\n        state: state,\n      });\n    });\n  });\n  return newNotes;\n};\n\ntype PaintMode = \"none\" | \"fill\" | \"clear\";\n\ntype Props = {\n  notes: number[][];\n  keyrange?: number;\n  hilightStep?: number;\n  onToggleNote: (note: number, step: number, mode: number) => void;\n  onClear: () => void;\n};\n\nconst Grid = ({ notes, hilightStep, onToggleNote, onClear }: Props) => {\n  const [paintMode, setPaintMode] = useState<PaintMode>(\"none\");\n\n  const handleMouseUp = () => setPaintMode(\"none\");\n\n  const handleMouseDown = (note: number, step: number) => {\n    if (notes[note][step] === 0) {\n      onToggleNote(note, step, 1);\n      setPaintMode(\"fill\");\n    } else {\n      onToggleNote(note, step, 0);\n      setPaintMode(\"clear\");\n    }\n  };\n\n  const handlePaint = (note: number, step: number) => {\n    if (paintMode === \"fill\" && notes[note][step] === 0) {\n      onToggleNote(note, step, 1);\n    }\n\n    if (paintMode === \"clear\" && notes[note][step] === 1)\n      onToggleNote(note, step, 0);\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mouseup\", handleMouseUp);\n\n    return () => {\n      document.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  });\n\n  const fieldStyle = {\n    \"--columns\": notes[0].length,\n    \"--rows\": notes.length,\n  } as CSSProperties;\n\n  const cursorStyle = {\n    \"--cursor\": hilightStep,\n  } as CSSProperties;\n\n  return (\n    <div className=\"gs-grid\">\n      <div className=\"gs-grid__field\" style={fieldStyle}>\n        {makeGridNotes(notes).map(({ key, note, step, state }: StepNote) => (\n          <Key\n            key={key}\n            note={note}\n            step={step}\n            state={state}\n            onToggle={() => onToggleNote(note, step, state ? 0 : 1)}\n            onMouseEnter={() => paintMode !== \"none\" && handlePaint(note, step)}\n            onMouseDown={() => handleMouseDown(note, step)}\n          />\n        ))}\n        <div className=\"gs-grid__cursor\" style={cursorStyle} />\n      </div>\n      <div className=\"gs-grid__toolbar\">\n        <button onClick={onClear}>Clear</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Grid;\n","import \"./Splainer.scss\";\n\nconst Splainer = () => {\n  return (\n    <div className=\"splainer\">\n      <span>\n        Made with <a href=\"https://www.elementary.audio/\">Elementary Audio</a>\n      </span>\n      <span>\n        Source on <a href=\"https://github.com/teetow/elementary_grid\">GitHub</a>\n      </span>\n      <span>\n        Check out my <a href=\"https://soundcloud.com/teetow\">SoundCloud</a>\n        {\" =)\"}\n      </span>\n    </div>\n  );\n};\n\nexport default Splainer;\n","import { el } from \"@nick-thompson/elementary\";\n\n/**\n * @typedef {Object} PluckProps\n * @property {number} [detune]\n * @property {number} [sharpness]\n * */\n\n/**\n *\n * @param {number} freq\n * @param {PluckProps} props\n */\nexport const stab = (\n  freq,\n  { gain = 1.0, detune = 0.005, sharpness = 1.0 } = {}\n) => {\n  const tone = (t, toneGain) =>\n    el.mul(\n      toneGain,\n      el.add(\n        el.sin(el.mul(2 * Math.PI, t)),\n        el.sin(el.mul(3 * Math.PI, t, 0.1 * sharpness))\n      )\n    );\n  let out = el.add(\n    el.mul(tone(el.phasor(freq * (1 - detune)), 0.6)),\n    el.mul(tone(el.phasor(freq * 1), 0.6)),\n    el.mul(tone(el.phasor(freq * (1 + detune)), 0.6))\n  );\n\n  out = el.highpass(70, 1.0, out);\n\n  return el.mul(gain, out);\n};\nstab.desc = \"Not quite a supersaw, but certainly a stabby little rascal\";\n\n/**\n * @typedef {Object} DingProps\n * @property {number} [gain]\n * @property {number} [richness]\n * @property {number} [detune]\n */\n\n/**\n * @param {number} freq\n * @param {DingProps} [props]\n */\nexport const ding = (\n  freq,\n  { gain = 1.0, richness = 0.7, detune = 0.004 } = {}\n) => {\n  return el.tanh(\n    el.mul(\n      gain * 8,\n      el.add(\n        el.mul(0.9 * richness, el.cycle(freq * (1 - detune))),\n        el.mul(0.9 * richness, el.cycle(freq * (1 + detune)))\n      )\n    )\n  );\n};\nding.desc = \"Pseudo-FM bell-like patch with a sprinkle of unpredictability\";\n\n/**\n * @typedef {Object} KickProps\n * @property {number} [freq]\n * @property {number} [pop]\n * @property {number} [speed]\n * */\n\n/**\n *\n * @param {Object} gate\n * @param {Kickprops} [props]\n */\nexport const kick = (gate, { freq = 50, speed = 1.0, pop = 1.0 } = {}) => {\n  let ampEnv = el.adsr(0.005, 0.3 * speed, 0.0, 0.0, gate);\n  let fastEnv = el.adsr(0.0001, 0.2 * speed, 0.0, 0.0, gate);\n  let slowEnv = el.adsr(0.0001, 0.5, 0.0, 0.0, gate);\n\n  let pitch = el.add(1.0, el.mul(2 * pop, fastEnv));\n  pitch = el.add(0.0, el.mul(0.5 * pop, slowEnv), pitch);\n\n  let osc = el.cycle(el.mul(pitch, freq));\n\n  let out = el.tanh(el.mul(1.5, ampEnv, osc));\n  out = el.highpass(freq, 8.4, out);\n\n  return out;\n};\n","import {\n  el,\n  ElementaryWebAudioRenderer as core,\n} from \"@nick-thompson/elementary\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\n\nimport { ding, kick, stab } from \"./tones\";\nimport { range, tempoToMs } from \"./utils\";\n\nlet ctx;\n\nfunction getAudioCtx() {\n  if (ctx) return ctx;\n  console.log(\"creating a new AudioContext\");\n  return (ctx = new AudioContext());\n}\ngetAudioCtx();\n\n/**\n * @typedef {Object} Props\n *\n * @property {number[][]} tracks\n * @property {number[]} scale\n * @property {function} onTick\n * @property {boolean} [withKick]\n * @property {number} [bpm] - optional\n * @property {string} [tone] - optional\n */\n\nconst tones = {\n  stab: stab,\n  ding: ding,\n  kick: kick,\n};\n\n/**\n *\n * @param {Props} props\n */\nexport const useElementary = ({\n  tracks,\n  scale,\n  onTick,\n  withKick = true,\n  bpm = 120,\n  tone = \"ding\",\n}) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const tick = useRef(\n    el.metro({ name: \"tick\", interval: tempoToMs(bpm, 16) })\n  ).current;\n  const beat = useRef(\n    el.metro({ name: \"beat\", interval: tempoToMs(bpm, 4) })\n  ).current;\n  const sync = useRef(\n    el.metro({ name: \"sync\", interval: tempoToMs(bpm, 1) })\n  ).current;\n\n  const metroStep = useRef(0);\n\n  useEffect(() => {\n    let node;\n    const load = async () => {\n      node = await core.initialize(ctx, {\n        numberOfInputs: 0,\n        numberOfOutputs: 1,\n        outputChannelCount: [4],\n      });\n      node.connect(ctx.destination);\n      setIsLoaded(true);\n    };\n    load();\n  }, []);\n\n  useEffect(() => {\n    core.on(\"metro\", (e) => {\n      if (e.source === \"sync\") {\n        metroStep.current = -1;\n      }\n\n      if (e.source === \"tick\") {\n        metroStep.current = metroStep.current + 1;\n        onTick(metroStep.current);\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const doRender = useCallback(async () => {\n    if (ctx.state === \"suspended\") {\n      await ctx.resume();\n    }\n\n    if (isLoaded && ctx.state === \"running\") {\n      try {\n        const seq = (i) => el.seq({ seq: tracks[i], loop: false }, tick, sync);\n        const env = (i) => el.adsr(0.01, 0.3, 0.1, 1.0, seq(i));\n        const osc = (freq) => tones[tone](freq, {gain: 0.8});\n        const voice = (i) => osc(scale[i]);\n        const patch = (i) => el.mul(env(i), voice(i));\n\n        let out = el.add(\n          el.add(range(4, 0).map(patch)),\n          el.add(range(4, 4).map(patch)),\n          el.add(range(4, 8).map(patch)),\n          el.add(range(4, 12).map(patch))\n        );\n\n        let dly = el.delay(\n          { size: 44100 },\n          el.ms2samps(3 * tempoToMs(bpm, 16)),\n          -0.3,\n          out\n        );\n\n        out = el.add(el.mul(0.9, out), el.mul(0.4, dly));\n\n        out = el.tanh(out);\n\n        if (withKick) {\n          const kicktrack = kick(beat, { pop: 1.3 });\n          out = el.add(out, kicktrack);\n        }\n\n        out = el.add(el.mul(0, tick), el.mul(0, beat), el.mul(0, sync), out);\n\n        core.render(out, out);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }, [beat, sync, tick, bpm, isLoaded, tracks, scale, tone, withKick]);\n\n  useEffect(() => {\n    doRender();\n  }, [doRender, tracks]);\n};\n","/* eslint-disable no-useless-rename */\nimport { useState } from \"react\";\nimport { useElementary } from \"../lib/elementary\";\nimport { midiToFrequency } from \"../lib/utils\";\n\nimport \"./Synth.scss\";\n\nconst KickSwitch = ({\n  active,\n  setActive,\n}: {\n  active: boolean;\n  setActive: (active: boolean) => void;\n}) => {\n  return (\n    <div className=\"eg-synth__option eg-synth__kick-switch\">\n      <input\n        className=\"eg-synth__switch\"\n        type=\"checkbox\"\n        id=\"kick\"\n        checked={active}\n        onChange={() => setActive(!active)}\n      />\n      <label htmlFor=\"kick\">Kick</label>\n    </div>\n  );\n};\n\ntype ToneName = \"stab\" | \"ding\";\ntype Tone = {\n  name: ToneName;\n  label: string;\n};\nconst tones = [\n  { name: \"stab\", label: \"Stab\" },\n  { name: \"ding\", label: \"Ding\" },\n] as Array<Tone>;\n\ntype TonePickerProps = {\n  currentTone: ToneName;\n  onSetTone: (name: ToneName) => void;\n};\n\nconst TonePicker = ({ currentTone, onSetTone }: TonePickerProps) => {\n  return (\n    <div className=\"eg-synth__tone-picker\">\n      {tones.map((tone) => {\n        return (\n          <div className=\"eg-synth__option\" key={tone.name}>\n            <input\n              type=\"radio\"\n              className=\"eg-synth__led\"\n              id={tone.name}\n              value={tone.name}\n              checked={tone.name === currentTone}\n              onChange={() => onSetTone(tone.name)}\n            />\n            <label htmlFor={tone.name}>{tone.label}</label>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\ntype Props = {\n  scale: number[];\n  sequence: number[][];\n  onTick: (step: number) => void;\n};\n\nfunction Synth({ scale, sequence, onTick }: Props) {\n  const [currentTone, setCurrentTone] = useState<ToneName>(\"stab\");\n  const [withKick, setWithKick] = useState<boolean>(false);\n\n  useElementary({\n    tracks: sequence,\n    scale: scale.map(midiToFrequency),\n    onTick: onTick,\n    tone: currentTone,\n    withKick: withKick,\n  });\n  return (\n    <div className=\"eg-synthoptions\">\n      <TonePicker currentTone={currentTone} onSetTone={setCurrentTone} />\n      <KickSwitch active={withKick} setActive={setWithKick} />\n    </div>\n  );\n}\n\nexport default Synth;\n","import { useState } from \"react\";\r\n\r\nimport { noteToMidi, range } from \"./lib/utils\";\r\n\r\nimport Grid from \"./ui/Grid\";\r\nimport Splainer from \"./ui/Splainer\";\r\nimport Synth from \"./ui/Synth\";\r\n\r\nimport \"./App.scss\";\r\n\r\nconst pentaScale = [\"c\", \"d\", \"f\", \"g\", \"a\"];\r\n\r\nconst numTracks = 16;\r\nconst numSteps = 16;\r\n\r\nconst scale = range(numTracks)\r\n  .map(\r\n    (i) =>\r\n      `${pentaScale[i % pentaScale.length]}${\r\n        Math.floor(i / pentaScale.length) + 4\r\n      }`\r\n  )\r\n  .flat();\r\n\r\nconst initTracks = () =>\r\n  Array.from(Array(numTracks), () => new Array(numSteps).fill(0));\r\n\r\nfunction App() {\r\n  const [tracks, setTracks] = useState<number[][]>(initTracks());\r\n  const [tick, setTick] = useState<number>(0);\r\n\r\n  const toggleNote = (note: number, step: number, value: number) => {\r\n    setTracks((prevTracks) => {\r\n      const newTracks = [...prevTracks];\r\n      newTracks[note][step] = value;\r\n\r\n      return newTracks;\r\n    });\r\n  };\r\n\r\n  const onTick = (tick: number) => {\r\n    setTick(tick);\r\n  };\r\n\r\n  return (\r\n    <div className=\"eg-app\">\r\n      <Synth\r\n        scale={scale.map(noteToMidi)}\r\n        sequence={tracks}\r\n        onTick={onTick}\r\n      />\r\n      <Grid\r\n        keyrange={16}\r\n        notes={tracks}\r\n        onToggleNote={toggleNote}\r\n        hilightStep={tick}\r\n        onClear={() => setTracks(initTracks())}\r\n      />\r\n      <Splainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}